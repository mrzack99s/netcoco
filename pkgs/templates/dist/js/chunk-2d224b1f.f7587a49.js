(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d224b1f"],{e0db:function(e,t,o){"use strict";o.r(t);var i=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("sui-tab",{attrs:{menu:{vertical:!0,fluid:!0},"menu-position":"left"}},[o("sui-tab-pane",{attrs:{title:"Create Topology"}},[o("TopologyTable")],1),o("sui-tab-pane",{attrs:{title:"Device mapping to topology"}},[o("CreateTopology",{attrs:{height:"500px"}})],1)],1)},l=[],a=o("2b0e"),n=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[e.haveTopology?o("div",[o("sui-grid",{staticStyle:{"padding-top":"1em"},attrs:{divided:"vertically"}},[o("sui-grid-row",{attrs:{columns:2}},[o("sui-grid-column",[o("h3",{staticClass:"ui header"},[e._v("Topology name: "+e._s(e.getTopologyName))]),o("sui-button",{attrs:{primary:"",size:"mini"},on:{click:e.addNode}},[o("sui-icon",{attrs:{size:"small",name:"plus"}}),e._v("Add Node")],1),o("sui-button",{attrs:{primary:"",size:"mini"},on:{click:e.addEdge}},[o("sui-icon",{attrs:{size:"small",name:"plus"}}),e._v("Add Edge")],1),o("sui-button",{attrs:{color:"red",size:"mini"},on:{click:e.deleteClick}},[o("sui-icon",{attrs:{size:"small",name:"minus"}}),e._v("Delete Node")],1)],1),o("sui-grid-column",[o("sui-form",[o("sui-form-field",[o("label",[e._v("Topology")]),o("sui-dropdown",{attrs:{placeholder:"Topology Name",selection:"",search:"",options:e.allTopology},model:{value:e.selectedTopoElement.value,callback:function(t){e.$set(e.selectedTopoElement,"value",t)},expression:"selectedTopoElement.value"}})],1)],1)],1)],1)],1),o("sui-card",{staticStyle:{width:"100%"}},[o("sui-card-content",[o("div",{ref:"topo",style:{height:e.$props.height},attrs:{id:"topo"}})])],1)],1):o("div",[e._m(0)]),o("div",[o("sui-modal",{attrs:{closable:!1},model:{value:e.addModal,callback:function(t){e.addModal=t},expression:"addModal"}},[o("sui-modal-header",[e._v("Add node")]),o("sui-modal-content",{attrs:{text:""}},[o("sui-form",{on:{submit:function(t){return t.preventDefault(),e.addNodeAction(t)}}},[o("sui-divider",{staticStyle:{"margin-bottom":"2em"},attrs:{horizontal:""}},[o("sui-icon",{attrs:{size:"large",name:"info circle"}}),e._v(" Information")],1),o("sui-form-fields",{attrs:{fields:"three"}},[o("sui-form-field",[o("label",[e._v("X-Axis")]),o("input",{directives:[{name:"model",rawName:"v-model.number",value:e.deviceMap.position_x,expression:"deviceMap.position_x",modifiers:{number:!0}}],attrs:{type:"text",placeholder:"X-Axis",required:""},domProps:{value:e.deviceMap.position_x},on:{input:function(t){t.target.composing||e.$set(e.deviceMap,"position_x",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),o("sui-form-field",[o("label",[e._v("Y-Axis")]),o("input",{directives:[{name:"model",rawName:"v-model.number",value:e.deviceMap.position_y,expression:"deviceMap.position_y",modifiers:{number:!0}}],attrs:{type:"text",placeholder:"Y-Axis",required:""},domProps:{value:e.deviceMap.position_y},on:{input:function(t){t.target.composing||e.$set(e.deviceMap,"position_y",e._n(t.target.value))},blur:function(t){return e.$forceUpdate()}}})]),o("sui-form-field",[o("label",[e._v("Device")]),o("sui-form-field",[o("sui-dropdown",{attrs:{placeholder:"Device",selection:"",options:e.allDevice,search:"",required:""},model:{value:e.deviceMap.device_id,callback:function(t){e.$set(e.deviceMap,"device_id",e._n(t))},expression:"deviceMap.device_id"}})],1)],1)],1),o("sui-form-field",{staticStyle:{margin:"2em 0"}},[o("sui-button",{attrs:{positive:"",type:"submit"}},[e._v(" Add device map ")]),o("sui-button",{attrs:{type:"button"},on:{click:function(t){e.addModal=!1}}},[e._v(" close ")])],1)],1)],1)],1)],1),o("div",[o("sui-modal",{attrs:{size:"mini",closable:!1},model:{value:e.addEdgeModal,callback:function(t){e.addEdgeModal=t},expression:"addEdgeModal"}},[o("sui-modal-header",[e._v("Add edge")]),o("sui-modal-content",{staticStyle:{"font-size":"11pt"},attrs:{text:""}},[o("sui-form",{on:{submit:function(t){return t.preventDefault(),e.addEdgeAction(t)}}},[o("sui-form-field",[o("label",[e._v("From node")]),o("sui-dropdown",{attrs:{placeholder:"Edge device",selection:"",search:"",options:e.allEdge},model:{value:e.edge.map_id,callback:function(t){e.$set(e.edge,"map_id",t)},expression:"edge.map_id"}})],1),o("sui-form-field",[o("label",[e._v("To node")]),o("sui-dropdown",{attrs:{placeholder:"Edge device",selection:"",search:"",options:e.allEdge},model:{value:e.edge.to_node_id,callback:function(t){e.$set(e.edge,"to_node_id",t)},expression:"edge.to_node_id"}})],1),o("sui-form-field",{staticStyle:{margin:"2em 0"}},[o("sui-button",{attrs:{positive:"",type:"submit"}},[e._v(" Add edge ")]),o("sui-button",{attrs:{type:"button"},on:{click:function(t){e.addEdgeModal=!1}}},[e._v(" close ")])],1)],1)],1)],1)],1),o("div",[o("sui-modal",{attrs:{size:"mini",closable:!1},model:{value:e.deleteModal,callback:function(t){e.deleteModal=t},expression:"deleteModal"}},[o("sui-modal-header",[e._v("Are you sure to delete?")]),o("sui-modal-content",{staticStyle:{"font-size":"11pt"},attrs:{text:""}},[o("sui-form",{on:{submit:function(t){return t.preventDefault(),e.deleteDeviceMapAction(t)}}},[o("sui-form-field",[o("label",[e._v("Node device name")]),o("sui-dropdown",{attrs:{placeholder:"Edge device",selection:"",search:"",options:e.allDeleteEdge},model:{value:e.deleteMapID,callback:function(t){e.deleteMapID=t},expression:"deleteMapID"}})],1),o("sui-form-field",{staticStyle:{margin:"2em 0"}},[o("sui-button",{attrs:{negative:"",type:"submit"}},[e._v(" Delete device map ")]),o("sui-button",{attrs:{type:"button"},on:{click:function(t){e.deleteModal=!1}}},[e._v(" close ")])],1)],1)],1)],1)],1)])},d=[function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"ui card",staticStyle:{width:"100%",height:"300px","padding-top":"2em"}},[o("div",{staticClass:"content"},[o("h2",{staticClass:"center aligned ui header"},[e._v("Not have a topology")]),o("div",{staticClass:"center aligned description"},[o("p",[e._v("Please add your topology")])])])])}],s=o("087a"),c=(o("1faf"),a["a"].extend({props:{height:String},data:function(){return{selectedTopoElement:{},allTopology:[],allDevice:[],allEdge:[],allDeleteEdge:[],haveTopology:!1,haveGenerate:!1,addModal:!1,addEdgeModal:!1,deleteModal:!1,topology:{name:null,selected:{},nodeData:[],edgesData:[],groupNode:{},options:{},network:{}},edge:{},deviceMap:{},deleteMapID:0}},computed:{getTopologyName:function(){var e=this.selectedTopoElement;return e.text}},methods:{getAllTopology:function(){var e=this;this.$api_connection.secureAPI().get("/topology/get").then((function(t){var o=t.data,i=!1;o.length>0&&(o.forEach((function(t){e.allTopology.push({text:t.topology_name,value:t.id}),t.default&&(i=!0)})),o.forEach((function(t,o){(i&&t.default||!i&&0==o)&&(e.selectedTopoElement={text:t.topology_name,value:t.id})})),e.haveTopology=!0,e.getTopology())}))},checkEdgeDuplicate:function(e,t){for(var o=0;o<this.topology.edgesData.length;o++){var i=this.topology.edgesData[o];if(i.from==t&&i.to==e)return!0}return!1},checkNodeDuplicate:function(e){for(var t=0;t<this.topology.nodeData.length;t++){var o=this.topology.nodeData[t];if(o._d_id==e.id)return!0}return!1},getTopology:function(){var e=this;this.$api_connection.secureAPI().get("/device-type/get").then((function(t){var i=t.data,l=e.topology.groupNode;i.forEach((function(e){l[e.device_type_name]={shape:"image",image:o("e078")("./"+e.device_type_name+".png"),size:25}})),e.topology.groupNode={},e.topology.groupNode=l})),this.$api_connection.secureAPI().get("/topology/get/"+this.selectedTopoElement.value).then((function(t){var o,i,l,a,n=t.data;(null===(i=null===(o=n.edges)||void 0===o?void 0:o.topology)||void 0===i?void 0:i.length)&&(e.topology.nodeData.length=0,null===(a=null===(l=n.edges)||void 0===l?void 0:l.topology)||void 0===a||a.forEach((function(t){var o={id:t.id,_d_id:t.edges.device.id,label:t.edges.device.device_name,title:"DeviceName: "+t.edges.device.device_name+"\n                            Hostname: "+t.edges.device.device_hostname+"\n                            ",group:t.edges.device.edges.in_type.device_type_name,name:t.edges.device.device_name,x:null==t.position_x?0:t.position_x,y:null==t.position_y?0:t.position_y,fixed:!0};e.topology.nodeData.push(o)})),e.topology.edgesData.length=0,n.edges.topology.forEach((function(t){var o,i;null!=t&&(null===(i=null===(o=t.edges)||void 0===o?void 0:o.edge)||void 0===i||i.forEach((function(o){if(t.id!=o.id&&!e.checkEdgeDuplicate(t.id,o.id)){var i={from:t.id,to:o.id};e.topology.edgesData.push(i)}})))})),e.topology.options={physics:!0,interaction:{hover:!0,hideEdgesOnDrag:!1,hideEdgesOnZoom:!1,hideNodesOnDrag:!1,selectable:!0,selectConnectedEdges:!1,zoomView:!0},groups:e.topology.groupNode},e.topology.network=new s["Network"](e.$refs.topo,{nodes:e.topology.nodeData,edges:e.topology.edgesData},e.topology.options))})),console.log(this.topology.nodeData)},deleteClick:function(){var e=this;this.allDeleteEdge.length=0,this.topology.nodeData.forEach((function(t){e.allDeleteEdge.push({text:t.label,value:t.id})})),this.deleteModal=!0},addNode:function(){var e=this;this.allDevice.length=0,this.$api_connection.secureAPI().get("/device/get").then((function(t){var o=t.data;o.forEach((function(t){e.checkNodeDuplicate(t)||e.allDevice.push({text:t.device_name,value:t.id})}))})),this.allEdge.length=0,this.$api_connection.secureAPI().get("/topology/get/"+this.selectedTopoElement.value).then((function(t){var o,i;null===(i=null===(o=t.data.edges)||void 0===o?void 0:o.topology)||void 0===i||i.forEach((function(t){e.allEdge.push({text:t.edges.device.device_name,value:t.id})}))})),this.addModal=!0},addEdge:function(){var e=this;this.allEdge.length=0,this.$api_connection.secureAPI().get("/topology/get/"+this.selectedTopoElement.value).then((function(t){var o,i;null===(i=null===(o=t.data.edges)||void 0===o?void 0:o.topology)||void 0===i||i.forEach((function(t){e.allEdge.push({text:t.edges.device.device_name,value:t.id})}))})),this.addEdgeModal=!0},addNodeAction:function(){var e=this;this.deviceMap.topology_id=this.selectedTopoElement.value,this.$api_connection.secureAPI().post("/topology-device-map/create",this.deviceMap).then((function(){e.$toasted.success("Add device map success"),0!=e.topology.nodeData.length&&e.clearTopology(),e.getTopology(),e.deviceMap={},e.addModal=!1})).catch((function(){e.$toasted.error("Add device map failed!")}))},addEdgeAction:function(){var e=this;this.$api_connection.secureAPI().post("/topology-device-map/create-edge",this.edge).then((function(){e.$toasted.success("Add edge success"),0!=e.topology.nodeData.length&&e.clearTopology(),e.getTopology(),e.edge={},e.addEdgeModal=!1})).catch((function(){e.$toasted.error("Add edge failed!")}))},deleteDeviceMapAction:function(){var e=this;this.$api_connection.secureAPI().delete("/topology-device-map/delete/"+this.deleteMapID).then((function(){e.$toasted.success("Delete device map success"),0!=e.topology.nodeData.length&&e.clearTopology(),e.getTopology(),e.deleteMapID=0,e.deleteModal=!1})).catch((function(){e.$toasted.error("Delete device map failed!")}))},clearTopology:function(){this.topology.network.destroy()}},mounted:function(){this.getAllTopology()}})),r=c,u=o("2877"),p=Object(u["a"])(r,n,d,!1,null,null,null),g=p.exports,v=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",[o("sui-table",{attrs:{celled:""}},[o("sui-table-header",{attrs:{"full-width":""}},[o("sui-table-row",[o("sui-table-header-cell",{attrs:{colspan:"6"}},[o("sui-input",{attrs:{size:"small",placeholder:"Search",icon:"search"},model:{value:e.table.filter,callback:function(t){e.$set(e.table,"filter",t)},expression:"table.filter"}}),o("sui-button",{attrs:{floated:"right",size:"small",primary:"",labeled:""},on:{click:function(t){e.addModal=!0}}},[o("sui-icon",{attrs:{name:"microchip"}}),e._v(" Add topology ")],1)],1)],1),o("sui-table-row",[o("sui-table-header-cell",[e._v("Name")]),o("sui-table-header-cell",[e._v("Description")]),o("sui-table-header-cell")],1)],1),o("sui-table-body",[e._l(e.tableFilter,(function(t,i){return o("sui-table-row",{key:t.id},[o("sui-table-cell",[e._v(e._s(t.topology_name))]),o("sui-table-cell",[e._v(e._s(t.topology_description))]),o("sui-table-cell",{attrs:{collapsing:""}},[o("sui-icon",{attrs:{name:"edit",link:"",color:"yellow"},on:{click:function(t){return e.edit(i)}}}),o("sui-icon",{attrs:{name:"trash",link:"",color:"red"},on:{click:function(t){return e.deleteDevice(i)}}})],1)],1)})),e.haveTopology?e._e():o("sui-table-header-cell",{staticStyle:{padding:"3em"},attrs:{colspan:"6"}},[e._v(" Not have topology ")])],2),e.haveTopology?o("sui-table-footer",[o("sui-table-row",[o("sui-table-header-cell",{attrs:{colspan:"6"}},[o("sui-menu",{staticStyle:{"font-size":"10pt"},attrs:{pagination:""}},e._l(e.getPageNumber,(function(t){return o("span",{key:t},[o("sui-menu-item",{tag:"a",attrs:{color:"black"},on:{click:function(o){return e.changePagination(t)}}},[e._v(e._s(t))])],1)})),0)],1)],1)],1):e._e()],1),o("div",[o("sui-modal",{attrs:{closable:!1},model:{value:e.addModal,callback:function(t){e.addModal=t},expression:"addModal"}},[o("sui-modal-header",[e._v("Add topology")]),o("sui-modal-content",{attrs:{text:""}},[e.loader?o("sui-segment",[o("sui-dimmer",{attrs:{active:"",inverted:""}},[o("sui-loader",[e._v("Wait a few")])],1),o("br"),o("br"),o("br")],1):o("sui-form",{on:{submit:function(t){return t.preventDefault(),e.add(t)}}},[o("sui-divider",{staticStyle:{"margin-bottom":"2em"},attrs:{horizontal:""}},[o("sui-icon",{attrs:{size:"large",name:"info circle"}}),e._v(" Topology Information")],1),o("sui-form-fields",{attrs:{fields:"two"}},[o("sui-form-field",[o("label",[e._v("Name")]),o("input",{directives:[{name:"model",rawName:"v-model",value:e.addTopology.topology_name,expression:"addTopology.topology_name"}],attrs:{type:"text",placeholder:"Name"},domProps:{value:e.addTopology.topology_name},on:{input:function(t){t.target.composing||e.$set(e.addTopology,"topology_name",t.target.value)}}})]),o("sui-form-field",[o("label",[e._v("Description")]),o("input",{directives:[{name:"model",rawName:"v-model",value:e.addTopology.topology_description,expression:"addTopology.topology_description"}],attrs:{type:"text",placeholder:"Description"},domProps:{value:e.addTopology.topology_description},on:{input:function(t){t.target.composing||e.$set(e.addTopology,"topology_description",t.target.value)}}})])],1),o("sui-form-field",{staticStyle:{margin:"2em 0"}},[o("sui-button",{attrs:{positive:"",type:"submit"}},[e._v(" Add topology ")]),o("sui-button",{attrs:{type:"button"},on:{click:function(t){e.addModal=!1}}},[e._v(" close ")])],1)],1)],1)],1)],1),o("div",[o("sui-modal",{attrs:{closable:!1},model:{value:e.editModal,callback:function(t){e.editModal=t},expression:"editModal"}},[o("sui-modal-header",[e._v("Edit devie type id "+e._s(e.selectedTopology.id)+" ")]),o("sui-modal-content",{attrs:{text:""}},[e.loader?o("sui-segment",[o("sui-dimmer",{attrs:{active:"",inverted:""}},[o("sui-loader",[e._v("Wait a few")])],1),o("br"),o("br"),o("br")],1):o("sui-form",{on:{submit:function(t){return t.preventDefault(),e.update(t)}}},[o("sui-divider",{staticStyle:{"margin-bottom":"2em"},attrs:{horizontal:""}},[o("sui-icon",{attrs:{size:"large",name:"info circle"}}),e._v(" topology Information")],1),o("sui-form-fields",{attrs:{fields:"two"}},[o("sui-form-field",[o("label",[e._v("Name")]),o("input",{directives:[{name:"model",rawName:"v-model",value:e.selectedTopology.topology_name,expression:"selectedTopology.topology_name"}],attrs:{type:"text",placeholder:"Name"},domProps:{value:e.selectedTopology.topology_name},on:{input:function(t){t.target.composing||e.$set(e.selectedTopology,"topology_name",t.target.value)}}})]),o("sui-form-field",[o("label",[e._v("Description")]),o("input",{directives:[{name:"model",rawName:"v-model",value:e.selectedTopology.topology_description,expression:"selectedTopology.topology_description"}],attrs:{type:"text",placeholder:"Description"},domProps:{value:e.selectedTopology.topology_description},on:{input:function(t){t.target.composing||e.$set(e.selectedTopology,"topology_description",t.target.value)}}})])],1),o("sui-form-field",{staticStyle:{margin:"2em 0"}},[o("sui-button",{attrs:{positive:"",type:"submit"}},[e._v(" Update topology ")]),o("sui-button",{attrs:{type:"button"},on:{click:function(t){e.editModal=!1}}},[e._v(" close ")])],1)],1)],1)],1)],1),o("div",[o("sui-modal",{attrs:{size:"mini",closable:!1},model:{value:e.deleteModal,callback:function(t){e.deleteModal=t},expression:"deleteModal"}},[o("sui-modal-header",[e._v("Are you sure to delete?")]),o("sui-modal-content",{attrs:{text:""}},[e.loader?o("sui-segment",[o("sui-dimmer",{attrs:{active:"",inverted:""}},[o("sui-loader",[e._v("Wait a few")])],1),o("br"),o("br"),o("br")],1):o("div",[e._v(" Name: "),o("b",[e._v(e._s(e.selectedTopology.device_type_name)+" ")]),e._v(" "),o("br")])],1),o("sui-modal-actions",[o("sui-button",{on:{click:function(t){e.deleteModal=!1}}},[e._v(" Cancel ")]),o("sui-button",{attrs:{negative:""},on:{click:function(t){return e.deleteTopologyAction()}}},[e._v(" Delete ")])],1)],1)],1)],1)},m=[],h=a["a"].extend({metaInfo:{title:"Device"},data:function(){return{table:{perPage:25,currentPagination:1,showTable:[],filter:""},haveTopology:!1,loader:!1,allTopology:[],selectedOption:0,selectedTopology:{},addTopology:{},editModal:!1,addModal:!1,deleteModal:!1}},computed:{getPageNumber:function(){var e=this.table.showTable.length/this.table.perPage;return 0==Math.ceil(e)?1:Math.ceil(e)},tableFilter:function(){var e=this,t=this.allTopology.filter((function(t){var o=t.topology_name.toString().toLowerCase(),i=t.topology_description.toString().toLowerCase(),l=e.table.filter.toLowerCase();return o.includes(l)||i.includes(l)})),o=(this.table.currentPagination-1)*this.table.perPage,i=(this.table.currentPagination+1)*this.table.perPage-1,l=t.slice(o,i);return this.table.showTable=t,this.haveTopology=t.length>0,l}},methods:{changePagination:function(e){this.table.currentPagination=e},getAllTopology:function(){var e=this;this.$api_connection.secureAPI().get("/topology/get").then((function(t){e.allTopology=t.data,e.allTopology.length>0&&(e.haveTopology=!0)}))},edit:function(e){this.selectedTopology=this.table.showTable[e],this.editModal=!0},deleteDevice:function(e){this.selectedTopology=this.table.showTable[e],this.deleteModal=!0},add:function(){var e=this;this.$api_connection.secureAPI().post("/topology/create",this.addTopology).then((function(){e.$toasted.success("Add topology success"),e.getAllTopology(),e.addModal=!1})).catch((function(){e.$toasted.error("Add topology failed!")}))},update:function(){var e=this;this.$api_connection.secureAPI().post("/topology/edit",this.selectedTopology).then((function(){e.$toasted.success("Update topology information success"),e.getAllTopology(),e.editModal=!1})).catch((function(){e.$toasted.error("Edit topology failed!")}))},deleteTopologyAction:function(){var e=this;console.log(this.selectedTopology),this.$api_connection.secureAPI().delete("/topology/delete/"+this.selectedTopology.id).then((function(){e.$toasted.success("Delete topology success"),e.getAllTopology(),e.deleteModal=!1})).catch((function(){e.$toasted.error("Delete topology failed!")}))}},mounted:function(){this.getAllTopology()}}),f=h,y=Object(u["a"])(f,v,m,!1,null,null,null),_=y.exports,b=a["a"].extend({components:{CreateTopology:g,TopologyTable:_}}),T=b,M=Object(u["a"])(T,i,l,!1,null,null,null);t["default"]=M.exports}}]);
//# sourceMappingURL=chunk-2d224b1f.f7587a49.js.map