// Code generated by entc, DO NOT EDIT.

package devicetype

const (
	// Label holds the string label denoting the devicetype type in the database.
	Label = "device_type"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDeviceTypeName holds the string denoting the device_type_name field in the database.
	FieldDeviceTypeName = "device_type_name"
	// EdgeTypes holds the string denoting the types edge name in mutations.
	EdgeTypes = "types"
	// Table holds the table name of the devicetype in the database.
	Table = "device_types"
	// TypesTable is the table the holds the types relation/edge.
	TypesTable = "devices"
	// TypesInverseTable is the table name for the Device entity.
	// It exists in this package in order to avoid circular dependency with the "device" package.
	TypesInverseTable = "devices"
	// TypesColumn is the table column denoting the types relation/edge.
	TypesColumn = "device_type_types"
)

// Columns holds all SQL columns for devicetype fields.
var Columns = []string{
	FieldID,
	FieldDeviceTypeName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DeviceTypeNameValidator is a validator for the "device_type_name" field. It is called by the builders before save.
	DeviceTypeNameValidator func(string) error
)
