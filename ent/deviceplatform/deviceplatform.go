// Code generated by entc, DO NOT EDIT.

package deviceplatform

const (
	// Label holds the string label denoting the deviceplatform type in the database.
	Label = "device_platform"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDevicePlatformName holds the string denoting the device_platform_name field in the database.
	FieldDevicePlatformName = "device_platform_name"
	// EdgePlatforms holds the string denoting the platforms edge name in mutations.
	EdgePlatforms = "platforms"
	// Table holds the table name of the deviceplatform in the database.
	Table = "device_platforms"
	// PlatformsTable is the table the holds the platforms relation/edge.
	PlatformsTable = "devices"
	// PlatformsInverseTable is the table name for the Device entity.
	// It exists in this package in order to avoid circular dependency with the "device" package.
	PlatformsInverseTable = "devices"
	// PlatformsColumn is the table column denoting the platforms relation/edge.
	PlatformsColumn = "device_platform_platforms"
)

// Columns holds all SQL columns for deviceplatform fields.
var Columns = []string{
	FieldID,
	FieldDevicePlatformName,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DevicePlatformNameValidator is a validator for the "device_platform_name" field. It is called by the builders before save.
	DevicePlatformNameValidator func(string) error
)
