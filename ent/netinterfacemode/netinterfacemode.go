// Code generated by entc, DO NOT EDIT.

package netinterfacemode

const (
	// Label holds the string label denoting the netinterfacemode type in the database.
	Label = "net_interface_mode"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldInterfaceMode holds the string denoting the interface_mode field in the database.
	FieldInterfaceMode = "interface_mode"
	// EdgeModes holds the string denoting the modes edge name in mutations.
	EdgeModes = "modes"
	// Table holds the table name of the netinterfacemode in the database.
	Table = "net_interface_modes"
	// ModesTable is the table the holds the modes relation/edge.
	ModesTable = "net_interfaces"
	// ModesInverseTable is the table name for the NetInterface entity.
	// It exists in this package in order to avoid circular dependency with the "netinterface" package.
	ModesInverseTable = "net_interfaces"
	// ModesColumn is the table column denoting the modes relation/edge.
	ModesColumn = "net_interface_mode_modes"
)

// Columns holds all SQL columns for netinterfacemode fields.
var Columns = []string{
	FieldID,
	FieldInterfaceMode,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// InterfaceModeValidator is a validator for the "interface_mode" field. It is called by the builders before save.
	InterfaceModeValidator func(string) error
)
