// Code generated by entc, DO NOT EDIT.

package deletedvlanlog

const (
	// Label holds the string label denoting the deletedvlanlog type in the database.
	Label = "deleted_vlan_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVlanID holds the string denoting the vlan_id field in the database.
	FieldVlanID = "vlan_id"
	// FieldDeleted holds the string denoting the deleted field in the database.
	FieldDeleted = "deleted"
	// EdgeOnDevice holds the string denoting the on_device edge name in mutations.
	EdgeOnDevice = "on_device"
	// Table holds the table name of the deletedvlanlog in the database.
	Table = "deleted_vlan_logs"
	// OnDeviceTable is the table the holds the on_device relation/edge.
	OnDeviceTable = "deleted_vlan_logs"
	// OnDeviceInverseTable is the table name for the Device entity.
	// It exists in this package in order to avoid circular dependency with the "device" package.
	OnDeviceInverseTable = "devices"
	// OnDeviceColumn is the table column denoting the on_device relation/edge.
	OnDeviceColumn = "device_deleted_vlans"
)

// Columns holds all SQL columns for deletedvlanlog fields.
var Columns = []string{
	FieldID,
	FieldVlanID,
	FieldDeleted,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "deleted_vlan_logs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"device_deleted_vlans",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// VlanIDValidator is a validator for the "vlan_id" field. It is called by the builders before save.
	VlanIDValidator func(int) error
	// DefaultDeleted holds the default value on creation for the "deleted" field.
	DefaultDeleted bool
)
