// Code generated by entc, DO NOT EDIT.

package nettopology

const (
	// Label holds the string label denoting the nettopology type in the database.
	Label = "net_topology"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTopologyName holds the string denoting the topology_name field in the database.
	FieldTopologyName = "topology_name"
	// FieldTopologyDescription holds the string denoting the topology_description field in the database.
	FieldTopologyDescription = "topology_description"
	// EdgeTopology holds the string denoting the topology edge name in mutations.
	EdgeTopology = "topology"
	// Table holds the table name of the nettopology in the database.
	Table = "net_topologies"
	// TopologyTable is the table the holds the topology relation/edge.
	TopologyTable = "net_topology_device_maps"
	// TopologyInverseTable is the table name for the NetTopologyDeviceMap entity.
	// It exists in this package in order to avoid circular dependency with the "nettopologydevicemap" package.
	TopologyInverseTable = "net_topology_device_maps"
	// TopologyColumn is the table column denoting the topology relation/edge.
	TopologyColumn = "net_topology_topology"
)

// Columns holds all SQL columns for nettopology fields.
var Columns = []string{
	FieldID,
	FieldTopologyName,
	FieldTopologyDescription,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TopologyNameValidator is a validator for the "topology_name" field. It is called by the builders before save.
	TopologyNameValidator func(string) error
	// TopologyDescriptionValidator is a validator for the "topology_description" field. It is called by the builders before save.
	TopologyDescriptionValidator func(string) error
)
