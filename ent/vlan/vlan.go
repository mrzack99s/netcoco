// Code generated by entc, DO NOT EDIT.

package vlan

const (
	// Label holds the string label denoting the vlan type in the database.
	Label = "vlan"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVlanID holds the string denoting the vlan_id field in the database.
	FieldVlanID = "vlan_id"
	// EdgeVlans holds the string denoting the vlans edge name in mutations.
	EdgeVlans = "vlans"
	// EdgeNativeVlan holds the string denoting the native_vlan edge name in mutations.
	EdgeNativeVlan = "native_vlan"
	// EdgeOnDevice holds the string denoting the on_device edge name in mutations.
	EdgeOnDevice = "on_device"
	// Table holds the table name of the vlan in the database.
	Table = "vlans"
	// VlansTable is the table the holds the vlans relation/edge. The primary key declared below.
	VlansTable = "vlan_vlans"
	// VlansInverseTable is the table name for the NetInterface entity.
	// It exists in this package in order to avoid circular dependency with the "netinterface" package.
	VlansInverseTable = "net_interfaces"
	// NativeVlanTable is the table the holds the native_vlan relation/edge.
	NativeVlanTable = "net_interfaces"
	// NativeVlanInverseTable is the table name for the NetInterface entity.
	// It exists in this package in order to avoid circular dependency with the "netinterface" package.
	NativeVlanInverseTable = "net_interfaces"
	// NativeVlanColumn is the table column denoting the native_vlan relation/edge.
	NativeVlanColumn = "vlan_native_vlan"
	// OnDeviceTable is the table the holds the on_device relation/edge. The primary key declared below.
	OnDeviceTable = "device_store_vlans"
	// OnDeviceInverseTable is the table name for the Device entity.
	// It exists in this package in order to avoid circular dependency with the "device" package.
	OnDeviceInverseTable = "devices"
)

// Columns holds all SQL columns for vlan fields.
var Columns = []string{
	FieldID,
	FieldVlanID,
}

var (
	// VlansPrimaryKey and VlansColumn2 are the table columns denoting the
	// primary key for the vlans relation (M2M).
	VlansPrimaryKey = []string{"vlan_id", "net_interface_id"}
	// OnDevicePrimaryKey and OnDeviceColumn2 are the table columns denoting the
	// primary key for the on_device relation (M2M).
	OnDevicePrimaryKey = []string{"device_id", "vlan_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// VlanIDValidator is a validator for the "vlan_id" field. It is called by the builders before save.
	VlanIDValidator func(int) error
)
