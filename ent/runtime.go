// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/mrzack99s/netcoco/ent/administrator"
	"github.com/mrzack99s/netcoco/ent/deletedvlanlog"
	"github.com/mrzack99s/netcoco/ent/device"
	"github.com/mrzack99s/netcoco/ent/deviceplatform"
	"github.com/mrzack99s/netcoco/ent/devicetype"
	"github.com/mrzack99s/netcoco/ent/netinterface"
	"github.com/mrzack99s/netcoco/ent/netinterfacemode"
	"github.com/mrzack99s/netcoco/ent/nettopology"
	"github.com/mrzack99s/netcoco/ent/nettopologydevicemap"
	"github.com/mrzack99s/netcoco/ent/schema"
	"github.com/mrzack99s/netcoco/ent/vlan"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	administratorFields := schema.Administrator{}.Fields()
	_ = administratorFields
	// administratorDescUsername is the schema descriptor for username field.
	administratorDescUsername := administratorFields[0].Descriptor()
	// administrator.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	administrator.UsernameValidator = administratorDescUsername.Validators[0].(func(string) error)
	// administratorDescPassword is the schema descriptor for password field.
	administratorDescPassword := administratorFields[1].Descriptor()
	// administrator.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	administrator.PasswordValidator = administratorDescPassword.Validators[0].(func(string) error)
	deletedvlanlogFields := schema.DeletedVlanLog{}.Fields()
	_ = deletedvlanlogFields
	// deletedvlanlogDescVlanID is the schema descriptor for vlan_id field.
	deletedvlanlogDescVlanID := deletedvlanlogFields[0].Descriptor()
	// deletedvlanlog.VlanIDValidator is a validator for the "vlan_id" field. It is called by the builders before save.
	deletedvlanlog.VlanIDValidator = deletedvlanlogDescVlanID.Validators[0].(func(int) error)
	// deletedvlanlogDescDeleted is the schema descriptor for deleted field.
	deletedvlanlogDescDeleted := deletedvlanlogFields[1].Descriptor()
	// deletedvlanlog.DefaultDeleted holds the default value on creation for the deleted field.
	deletedvlanlog.DefaultDeleted = deletedvlanlogDescDeleted.Default.(bool)
	deviceFields := schema.Device{}.Fields()
	_ = deviceFields
	// deviceDescDeviceName is the schema descriptor for device_name field.
	deviceDescDeviceName := deviceFields[0].Descriptor()
	// device.DeviceNameValidator is a validator for the "device_name" field. It is called by the builders before save.
	device.DeviceNameValidator = deviceDescDeviceName.Validators[0].(func(string) error)
	// deviceDescDeviceHostname is the schema descriptor for device_hostname field.
	deviceDescDeviceHostname := deviceFields[1].Descriptor()
	// device.DeviceHostnameValidator is a validator for the "device_hostname" field. It is called by the builders before save.
	device.DeviceHostnameValidator = deviceDescDeviceHostname.Validators[0].(func(string) error)
	// deviceDescDeviceSecret is the schema descriptor for device_secret field.
	deviceDescDeviceSecret := deviceFields[4].Descriptor()
	// device.DefaultDeviceSecret holds the default value on creation for the device_secret field.
	device.DefaultDeviceSecret = deviceDescDeviceSecret.Default.(string)
	// deviceDescDeviceSSHPort is the schema descriptor for device_ssh_port field.
	deviceDescDeviceSSHPort := deviceFields[5].Descriptor()
	// device.DefaultDeviceSSHPort holds the default value on creation for the device_ssh_port field.
	device.DefaultDeviceSSHPort = deviceDescDeviceSSHPort.Default.(int)
	// device.DeviceSSHPortValidator is a validator for the "device_ssh_port" field. It is called by the builders before save.
	device.DeviceSSHPortValidator = deviceDescDeviceSSHPort.Validators[0].(func(int) error)
	// deviceDescDeviceCommitConfig is the schema descriptor for device_commit_config field.
	deviceDescDeviceCommitConfig := deviceFields[6].Descriptor()
	// device.DefaultDeviceCommitConfig holds the default value on creation for the device_commit_config field.
	device.DefaultDeviceCommitConfig = deviceDescDeviceCommitConfig.Default.(bool)
	deviceplatformFields := schema.DevicePlatform{}.Fields()
	_ = deviceplatformFields
	// deviceplatformDescDevicePlatformName is the schema descriptor for device_platform_name field.
	deviceplatformDescDevicePlatformName := deviceplatformFields[0].Descriptor()
	// deviceplatform.DevicePlatformNameValidator is a validator for the "device_platform_name" field. It is called by the builders before save.
	deviceplatform.DevicePlatformNameValidator = deviceplatformDescDevicePlatformName.Validators[0].(func(string) error)
	devicetypeFields := schema.DeviceType{}.Fields()
	_ = devicetypeFields
	// devicetypeDescDeviceTypeName is the schema descriptor for device_type_name field.
	devicetypeDescDeviceTypeName := devicetypeFields[0].Descriptor()
	// devicetype.DeviceTypeNameValidator is a validator for the "device_type_name" field. It is called by the builders before save.
	devicetype.DeviceTypeNameValidator = devicetypeDescDeviceTypeName.Validators[0].(func(string) error)
	netinterfaceFields := schema.NetInterface{}.Fields()
	_ = netinterfaceFields
	// netinterfaceDescInterfaceName is the schema descriptor for interface_name field.
	netinterfaceDescInterfaceName := netinterfaceFields[0].Descriptor()
	// netinterface.InterfaceNameValidator is a validator for the "interface_name" field. It is called by the builders before save.
	netinterface.InterfaceNameValidator = netinterfaceDescInterfaceName.Validators[0].(func(string) error)
	// netinterfaceDescInterfaceShutdown is the schema descriptor for interface_shutdown field.
	netinterfaceDescInterfaceShutdown := netinterfaceFields[1].Descriptor()
	// netinterface.DefaultInterfaceShutdown holds the default value on creation for the interface_shutdown field.
	netinterface.DefaultInterfaceShutdown = netinterfaceDescInterfaceShutdown.Default.(bool)
	netinterfacemodeFields := schema.NetInterfaceMode{}.Fields()
	_ = netinterfacemodeFields
	// netinterfacemodeDescInterfaceMode is the schema descriptor for interface_mode field.
	netinterfacemodeDescInterfaceMode := netinterfacemodeFields[0].Descriptor()
	// netinterfacemode.InterfaceModeValidator is a validator for the "interface_mode" field. It is called by the builders before save.
	netinterfacemode.InterfaceModeValidator = netinterfacemodeDescInterfaceMode.Validators[0].(func(string) error)
	nettopologyFields := schema.NetTopology{}.Fields()
	_ = nettopologyFields
	// nettopologyDescTopologyName is the schema descriptor for topology_name field.
	nettopologyDescTopologyName := nettopologyFields[0].Descriptor()
	// nettopology.TopologyNameValidator is a validator for the "topology_name" field. It is called by the builders before save.
	nettopology.TopologyNameValidator = nettopologyDescTopologyName.Validators[0].(func(string) error)
	// nettopologyDescTopologyDescription is the schema descriptor for topology_description field.
	nettopologyDescTopologyDescription := nettopologyFields[1].Descriptor()
	// nettopology.TopologyDescriptionValidator is a validator for the "topology_description" field. It is called by the builders before save.
	nettopology.TopologyDescriptionValidator = nettopologyDescTopologyDescription.Validators[0].(func(string) error)
	nettopologydevicemapFields := schema.NetTopologyDeviceMap{}.Fields()
	_ = nettopologydevicemapFields
	// nettopologydevicemapDescPositionX is the schema descriptor for position_x field.
	nettopologydevicemapDescPositionX := nettopologydevicemapFields[0].Descriptor()
	// nettopologydevicemap.DefaultPositionX holds the default value on creation for the position_x field.
	nettopologydevicemap.DefaultPositionX = nettopologydevicemapDescPositionX.Default.(int)
	// nettopologydevicemapDescPositionY is the schema descriptor for position_y field.
	nettopologydevicemapDescPositionY := nettopologydevicemapFields[1].Descriptor()
	// nettopologydevicemap.DefaultPositionY holds the default value on creation for the position_y field.
	nettopologydevicemap.DefaultPositionY = nettopologydevicemapDescPositionY.Default.(int)
	vlanFields := schema.Vlan{}.Fields()
	_ = vlanFields
	// vlanDescVlanID is the schema descriptor for vlan_id field.
	vlanDescVlanID := vlanFields[0].Descriptor()
	// vlan.VlanIDValidator is a validator for the "vlan_id" field. It is called by the builders before save.
	vlan.VlanIDValidator = vlanDescVlanID.Validators[0].(func(int) error)
}
